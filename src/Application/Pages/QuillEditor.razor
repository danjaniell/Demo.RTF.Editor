@page "/quill-editor"
@inject IJSRuntime JSRuntime

@if (EditorEnabled)
{
    <RadzenCard>
        <PdfConversion HtmlValue="@htmlValue" OnTemplateLoad="OnTemplateLoad"/>
        <div id="toolbar" @ref="@divEditorElement"></div>
    </RadzenCard>
}

@code {
    private string htmlValue = "<h1>Hello World!!!</h1>";
    private ElementReference divEditorElement;
    private bool EditorEnabled = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("QuillFunctions.createQuill", divEditorElement);
        }
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        JSRuntime.InvokeVoidAsync("registerUpdateHtmlValueFunction", DotNetObjectReference.Create(this));
    }

    [JSInvokable]
    public void UpdateHtmlValue(string newValue)
    {
        htmlValue = newValue;
        StateHasChanged();
    }

    private void OnTemplateLoad(string htmlTemplateValue)
    {
        JSRuntime.InvokeVoidAsync("QuillFunctions.setTextValue", htmlTemplateValue);
        htmlValue = htmlTemplateValue;
        StateHasChanged();
    }
}
